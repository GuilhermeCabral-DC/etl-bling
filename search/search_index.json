{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Vis\u00e3o Geral","text":"<p>Bem-vindo \u00e0 documenta\u00e7\u00e3o do projeto de ETL Bling para PostgreSQL.</p> <p>Esta solu\u00e7\u00e3o automatiza a integra\u00e7\u00e3o entre a plataforma Bling e um banco de dados PostgreSQL, centralizando dados estrat\u00e9gicos de diferentes \u00e1reas do neg\u00f3cio de forma confi\u00e1vel, perform\u00e1tica e escal\u00e1vel.</p> <p>A arquitetura foi desenhada para garantir robustez, rastreabilidade e f\u00e1cil manuten\u00e7\u00e3o, adotando as melhores pr\u00e1ticas de ETL e engenharia de dados.</p>"},{"location":"#o-que-este-projeto-entrega","title":"O que este projeto entrega","text":"<ul> <li>Centraliza\u00e7\u00e3o dos dados do Bling em um reposit\u00f3rio relacional robusto.</li> <li>Processamento em lote (batch) e inserts em massa (bulk insert) para alta performance.</li> <li>Controle incremental das cargas, evitando duplicidades e garantindo hist\u00f3rico.</li> <li>Logging detalhado para auditoria e troubleshooting.</li> <li>Facilidade de expans\u00e3o: pipelines separados por entidade, c\u00f3digo modular e documenta\u00e7\u00e3o viva.</li> </ul>"},{"location":"#navegacao-da-documentacao","title":"Navega\u00e7\u00e3o da Documenta\u00e7\u00e3o","text":"<ul> <li>Banco de Dados: Estrutura dos schemas, tabelas e controle de carga.</li> <li>API Bling: Vis\u00e3o geral, endpoints, pagina\u00e7\u00e3o, limites e tratamento de erros.</li> <li>Python &amp; ETL: Arquitetura dos scripts, exemplos, boas pr\u00e1ticas e troubleshooting.</li> <li>Configura\u00e7\u00e3o e Deploy: Par\u00e2metros sens\u00edveis, execu\u00e7\u00e3o, FAQ e evolu\u00e7\u00e3o.</li> </ul> <p>Note</p> <p>Esta documenta\u00e7\u00e3o \u00e9 viva e ser\u00e1 continuamente atualizada conforme novas funcionalidades e aprendizados em produ\u00e7\u00e3o. Para detalhes t\u00e9cnicos, consulte os t\u00f3picos espec\u00edficos no menu lateral.</p>"},{"location":"deploy/","title":"Deploy & Execu\u00e7\u00e3o","text":"<p>Arquitetura dos Scripts Esta se\u00e7\u00e3o descreve a estrutura modular do c\u00f3digo Python, detalhando a fun\u00e7\u00e3o de cada arquivo e como eles se integram para compor um pipeline ETL robusto, escal\u00e1vel e de f\u00e1cil manuten\u00e7\u00e3o.</p> <p>Organiza\u00e7\u00e3o dos M\u00f3dulos O projeto \u00e9 dividido em m\u00f3dulos independentes, cada um com responsabilidades bem definidas, seguindo boas pr\u00e1ticas de separa\u00e7\u00e3o de responsabilidades:</p> <p>M\u00f3dulo  Descri\u00e7\u00e3o main.py Orquestra\u00e7\u00e3o central do pipeline ETL: inicia e monitora as cargas bling_api.py    Camada de integra\u00e7\u00e3o: realiza requisi\u00e7\u00f5es \u00e0 API do Bling etl.py  L\u00f3gica de controle incremental e execu\u00e7\u00e3o das rotinas de carga db.py   Opera\u00e7\u00f5es com PostgreSQL: conex\u00f5es, inserts, upserts e comandos SQL transformers.py Transforma\u00e7\u00f5es, valida\u00e7\u00f5es e padroniza\u00e7\u00e3o dos dados extra\u00eddos log.py  Logging centralizado e estruturado (execu\u00e7\u00e3o, falhas, m\u00e9tricas) auth.py Gerenciamento da autentica\u00e7\u00e3o OAuth2 com a API Bling config.py   Carrega e centraliza vari\u00e1veis de ambiente e par\u00e2metros globais utils.py    Fun\u00e7\u00f5es utilit\u00e1rias diversas (helpers) obter_token.py  Script manual para obten\u00e7\u00e3o ou renova\u00e7\u00e3o de tokens OAuth2 date_utils.py   Fun\u00e7\u00f5es espec\u00edficas para manipula\u00e7\u00e3o e padroniza\u00e7\u00e3o de datas</p> <p>Fluxo Geral do Pipeline Abaixo um resumo textual do fluxo principal do pipeline:</p> <p>O main.py inicia a execu\u00e7\u00e3o do processo ETL.</p> <p>O m\u00f3dulo auth.py gerencia a autentica\u00e7\u00e3o e renova\u00e7\u00e3o dos tokens de acesso.</p> <p>O bling_api.py executa as chamadas aos endpoints do Bling, recebendo os dados brutos.</p> <p>O etl.py controla o processamento incremental, definindo quais entidades e per\u00edodos devem ser processados.</p> <p>O transformers.py normaliza e valida os dados extra\u00eddos.</p> <p>O db.py realiza a inser\u00e7\u00e3o ou atualiza\u00e7\u00e3o dos dados no PostgreSQL, utilizando opera\u00e7\u00f5es otimizadas para grandes volumes.</p> <p>O log.py registra logs estruturados sobre cada etapa, incluindo erros, execu\u00e7\u00f5es e m\u00e9tricas de performance.</p> <p>Outros m\u00f3dulos de suporte, como utils.py, config.py e date_utils.py, s\u00e3o utilizados sempre que fun\u00e7\u00f5es utilit\u00e1rias ou par\u00e2metros globais s\u00e3o necess\u00e1rios.</p> <p>Boas Pr\u00e1ticas Adotadas Separa\u00e7\u00e3o de responsabilidades: Cada m\u00f3dulo cuida de uma etapa ou servi\u00e7o espec\u00edfico.</p> <p>Reaproveitamento de c\u00f3digo: Fun\u00e7\u00f5es utilit\u00e1rias centralizadas em m\u00f3dulos pr\u00f3prios.</p> <p>Escalabilidade: Suporte para novas entidades/endpoints e f\u00e1cil expans\u00e3o do pipeline.</p> <p>Controle e rastreabilidade: Logging centralizado e tabelas de controle no banco garantem rastreamento completo das execu\u00e7\u00f5es.</p> <p>Para detalhes do c\u00f3digo de cada m\u00f3dulo, consulte a documenta\u00e7\u00e3o detalhada na se\u00e7\u00e3o correspondente do menu lateral.</p>"},{"location":"api/","title":"Vis\u00e3o Geral \u2013 API Bling","text":"<p>A API Bling \u00e9 o ponto de integra\u00e7\u00e3o central do pipeline ETL deste projeto, sendo respons\u00e1vel pela extra\u00e7\u00e3o automatizada dos dados do sistema Bling para posterior processamento, transforma\u00e7\u00e3o e carga no Data Warehouse.</p>"},{"location":"api/#o-que-e-a-api-bling","title":"O que \u00e9 a API Bling?","text":"<p>A API Bling \u00e9 um servi\u00e7o RESTful que permite integra\u00e7\u00e3o program\u00e1tica com o sistema de gest\u00e3o empresarial Bling, viabilizando consulta e manipula\u00e7\u00e3o de dados como produtos, pedidos, notas fiscais, contatos, estoques e muito mais.</p>"},{"location":"api/#abordagem-de-integracao","title":"Abordagem de Integra\u00e7\u00e3o","text":"<ul> <li>Autentica\u00e7\u00e3o: Utiliza OAuth2, garantindo seguran\u00e7a e controle de acesso granular.</li> <li>Versionamento: Sempre conferir a documenta\u00e7\u00e3o oficial para atualiza\u00e7\u00f5es e mudan\u00e7as de endpoints.</li> <li>Padr\u00e3o de Resposta: As respostas s\u00e3o geralmente em formato JSON, podendo conter metadados de pagina\u00e7\u00e3o e detalhes de erro.</li> <li>Pagina\u00e7\u00e3o: Diversos endpoints implementam limites de resposta por p\u00e1gina, exigindo controle de navega\u00e7\u00e3o para grandes volumes de dados.</li> <li>Limites e Restri\u00e7\u00f5es: Existem quotas e limites de requisi\u00e7\u00f5es por tempo que devem ser observados para evitar bloqueios.</li> <li>Tratamento de Erros: O pipeline implementa tratamento autom\u00e1tico para erros comuns (timeout, autentica\u00e7\u00e3o, rate limit, etc.), bem como logging centralizado para rastreabilidade.</li> </ul>"},{"location":"api/#como-usamos-a-api-bling-neste-projeto","title":"Como usamos a API Bling neste projeto","text":"<ul> <li>Extra\u00e7\u00e3o de entidades principais (empresa, produtos, estoque, pedidos, vendedores, etc.).</li> <li>Sincroniza\u00e7\u00e3o incremental baseada em datas e IDs.</li> <li>Controle robusto de logs e falhas, garantindo reprocessamento seletivo.</li> <li>Respeito \u00e0s limita\u00e7\u00f5es de uso da API, com backoff exponencial e gerenciamento de retries.</li> </ul>"},{"location":"api/#referencias-uteis","title":"Refer\u00eancias \u00dateis","text":"<ul> <li>Documenta\u00e7\u00e3o Oficial da API Bling</li> <li>OAuth2 Bling \u2013 Autentica\u00e7\u00e3o</li> <li>Se\u00e7\u00f5es detalhadas nesta documenta\u00e7\u00e3o:<ul> <li>Endpoints</li> <li>Pagina\u00e7\u00e3o</li> <li>Limites e Restri\u00e7\u00f5es</li> <li>Erros Comuns</li> </ul> </li> </ul> <p>Note</p> <p>Consulte sempre as se\u00e7\u00f5es seguintes para detalhes de endpoints, exemplos de requisi\u00e7\u00f5es, erros comuns e melhores pr\u00e1ticas de integra\u00e7\u00e3o.</p>"},{"location":"api/endpoints/","title":"Endpoints da API Bling","text":"<p>Esta se\u00e7\u00e3o documenta todos os endpoints da API Bling consumidos pelo pipeline ETL Lojas Stilli. Inclui informa\u00e7\u00f5es sobre URLs, m\u00e9todos, par\u00e2metros, exemplos de uso e observa\u00e7\u00f5es espec\u00edficas para cada caso.</p>"},{"location":"api/endpoints/#sumario-dos-endpoints-utilizados","title":"Sum\u00e1rio dos Endpoints Utilizados","text":"Entidade M\u00e9todo Caminho Descri\u00e7\u00e3o Empresas GET <code>/empresas</code> Consulta dados cadastrais Produtos GET <code>/produtos</code> Lista produtos Estoques GET <code>/estoques</code> Consulta saldos em dep\u00f3sitos Pedidos de Venda GET <code>/pedidos/vendas</code> Lista pedidos de venda Pedidos de Compra GET <code>/pedidos/compras</code> Lista pedidos de compra Vendedores GET <code>/vendedores</code> Consulta vendedores ... ... ... ... <p>Nota: Todos os endpoints s\u00e3o acessados via base URL da API Bling, com autentica\u00e7\u00e3o OAuth2 obrigat\u00f3ria.</p>"},{"location":"api/endpoints/#exemplo-detalhado-de-endpoint","title":"Exemplo Detalhado de Endpoint","text":""},{"location":"api/endpoints/#produtos","title":"Produtos","text":"<ul> <li>URL: <code>https://api.bling.com.br/v1/produtos</code></li> <li>M\u00e9todo: <code>GET</code></li> <li>Descri\u00e7\u00e3o: Retorna a lista de produtos cadastrados na conta Bling.</li> <li> <p>Par\u00e2metros principais:</p> <ul> <li><code>pagina</code> (opcional, inteiro): N\u00famero da p\u00e1gina para pagina\u00e7\u00e3o</li> <li><code>limit</code> (opcional, inteiro): Quantidade de itens por p\u00e1gina (m\u00e1ximo permitido: 100)</li> <li>Filtros adicionais conforme documenta\u00e7\u00e3o oficial</li> </ul> </li> <li> <p>Request de exemplo: <pre><code>GET /v1/produtos?pagina=1&amp;limit=50 HTTP/1.1\nHost: api.bling.com.br\nAuthorization: Bearer &lt;seu_token_de_acesso&gt;\n</code></pre></p> </li> <li> <p>Response de exemplo: <pre><code>{\n  \"data\": [\n    {\n      \"id\": 12345,\n      \"nome\": \"Produto A\",\n      \"codigo\": \"SKU123\",\n      \"preco\": 19.99,\n      ...\n    },\n    ...\n  ],\n  \"page\": 1,\n  \"totalPages\": 10\n}\n</code></pre></p> </li> <li> <p>Notas:</p> <ul> <li>Pagina\u00e7\u00e3o obrigat\u00f3ria para listas grandes.</li> <li>Respeite limites de requisi\u00e7\u00e3o por minuto (veja se\u00e7\u00e3o de limites).</li> <li>Consulte a se\u00e7\u00e3o \u201cPagina\u00e7\u00e3o\u201d para detalhes de itera\u00e7\u00e3o.</li> </ul> </li> </ul>"},{"location":"api/endpoints/#observacoes-gerais","title":"Observa\u00e7\u00f5es Gerais","text":"<ul> <li>Todas as requisi\u00e7\u00f5es devem conter header <code>Authorization: Bearer &lt;token&gt;</code>.</li> <li>Par\u00e2metros opcionais podem ser omitidos para retornar todos os registros.</li> <li>Consulte a documenta\u00e7\u00e3o oficial da API Bling para todos os detalhes e endpoints dispon\u00edveis.</li> </ul> <p>Tip</p> <p>Lista sempre atualizada conforme novos endpoints forem integrados ao pipeline ETL.</p>"},{"location":"api/erros/","title":"Erros Comuns \u2013 API Bling","text":"<p>Esta se\u00e7\u00e3o documenta os principais erros retornados pela API Bling e como trat\u00e1-los corretamente em seu pipeline ETL.</p>"},{"location":"api/erros/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>A API Bling utiliza c\u00f3digos HTTP para indicar sucesso ou falhas nas requisi\u00e7\u00f5es. Todas as respostas de erro retornam um objeto no JSON com os campos <code>type</code>, <code>message</code> e <code>description</code>, auxiliando no tratamento autom\u00e1tico e no registro de logs. Erros <code>4xx</code> indicam problemas com os dados enviados; erros <code>5xx</code> apontam falhas internas do servi\u00e7o :contentReference[oaicite:3]{index=3}.</p>"},{"location":"api/erros/#principais-erros-e-respostas-esperadas","title":"Principais Erros e Respostas Esperadas","text":""},{"location":"api/erros/#validation_error","title":"<code>VALIDATION_ERROR</code>","text":"<ul> <li>HTTP Code: 400  </li> <li>Quando ocorre: Falha na valida\u00e7\u00e3o dos campos enviados <pre><code>{\n  \"error\": {\n    \"type\": \"VALIDATION_ERROR\",\n    \"message\": \"N\u00e3o foi poss\u00edvel executar a opera\u00e7\u00e3o\",\n    \"description\": \"Ocorreu um erro ao validar os dados recebidos.\"\n  }\n}\n</code></pre></li> </ul>"},{"location":"api/erros/#missing_required_field_error","title":"<code>MISSING_REQUIRED_FIELD_ERROR</code>","text":"<ul> <li>HTTP Code: 400</li> <li>Quando ocorre: Campo obrigat\u00f3rio ausente <pre><code>{\n  \"error\": {\n    \"type\": \"UNKNOWN_ERROR\",\n    \"message\": \"N\u00e3o foi poss\u00edvel executar a opera\u00e7\u00e3o\",\n    \"description\": \"Ocorreu um erro inesperado.\"\n  }\n}\n</code></pre></li> </ul>"},{"location":"api/erros/#unknown_error","title":"<code>UNKNOWN_ERROR</code>","text":"<ul> <li>HTTP Code: 400</li> <li>Quando ocorre: Erro n\u00e3o mapeado pelo sistema <pre><code>{\n  \"error\": {\n    \"type\": \"UNKNOWN_ERROR\",\n    \"message\": \"N\u00e3o foi poss\u00edvel executar a opera\u00e7\u00e3o\",\n    \"description\": \"Ocorreu um erro inesperado.\"\n  }\n}\n</code></pre></li> </ul>"},{"location":"api/erros/#unauthorized","title":"<code>UNAUTHORIZED</code>","text":"<ul> <li>HTTP Code: 401</li> <li>Quando ocorre: Token de acesso inv\u00e1lido ou expirado <pre><code>{\n  \"error\": {\n    \"type\": \"UNAUTHORIZED\",\n    \"message\": \"N\u00e3o autorizado.\",\n    \"description\": \"Verifique suas credenciais e tente novamente.\"\n  }\n}\n</code></pre></li> </ul>"},{"location":"api/erros/#forbidden","title":"<code>FORBIDDEN</code>","text":"<ul> <li>HTTP Code: 403</li> <li>Quando ocorre: Permiss\u00f5es insuficientes para o recurso solicitado <pre><code>{\n  \"error\": {\n    \"type\": \"FORBIDDEN\",\n    \"message\": \"N\u00e3o permitido.\",\n    \"description\": \"Voc\u00ea n\u00e3o est\u00e1 autorizado a realizar esta opera\u00e7\u00e3o.\"\n  }\n}\n</code></pre></li> </ul>"},{"location":"api/erros/#resource_not_found","title":"<code>RESOURCE_NOT_FOUND</code>","text":"<ul> <li>HTTP Code: 404</li> <li>Quando ocorre: Recurso solicitado n\u00e3o encontrado ou ID inv\u00e1lido <pre><code>{\n  \"error\": {\n    \"type\": \"RESOURCE_NOT_FOUND\",\n    \"message\": \"N\u00e3o autorizado.\",\n    \"description\": \"O recurso requisitado n\u00e3o foi encontrado.\"\n  }\n}\n</code></pre></li> </ul>"},{"location":"api/erros/#too_many_requests","title":"<code>TOO_MANY_REQUESTS</code>","text":"<ul> <li>HTTP Code: 429</li> <li>Quando ocorre: Limite de requisi\u00e7\u00e3o excedido (per second ou per day) <pre><code>{\n  \"error\": {\n    \"type\": \"TOO_MANY_REQUESTS\",\n    \"message\": \"Limite de requisi\u00e7\u00f5es atingido.\",\n    \"description\": \"Voc\u00ea atingiu o limite dispon\u00edvel. Aguarde alguns minutos e tente novamente.\"\n  }\n}\n</code></pre></li> </ul>"},{"location":"api/erros/#server_error","title":"<code>SERVER_ERROR</code>","text":"<ul> <li>HTTP Code: 500</li> <li>Quando ocorre: Falha interna no servidor da API <pre><code>{\n  \"error\": {\n    \"type\": \"SERVER_ERROR\",\n    \"message\": \"N\u00e3o foi poss\u00edvel executar a opera\u00e7\u00e3o\",\n    \"description\": \"Um erro interno ocorreu.\"\n  }\n}\n</code></pre></li> </ul>"},{"location":"api/erros/#estrategias-de-tratamento","title":"Estrat\u00e9gias de Tratamento","text":"<ul> <li>Deserializar e logar os campos <code>type</code> e <code>description</code> para rastreabilidade.</li> <li>Implementar retries espec\u00edficos:<ul> <li><code>TOO_MANY_REQUESTS</code> \u2192 backoff exponencial e nova tentativa.</li> <li><code>UNAUTHORIZED</code> \u2192 requer refresh de token ou reautentica\u00e7\u00e3o.</li> </ul> </li> <li>Tratamento de erros 4xx: geralmente reprocessar ap\u00f3s ajuste dos dados ou par\u00e2metros.</li> <li>Erros 5xx: aplicar retry limitado e registrar falha para rean\u00e1lise posterior.</li> </ul>"},{"location":"api/erros/#referencias","title":"Refer\u00eancias","text":"<ul> <li>Erros Comuns \u2013 Documenta\u00e7\u00e3o Oficial Bling</li> <li>Bling Developer</li> </ul> <p>Note</p> <p>Recomenda-se capturar e armazenar os erros em logs estruturados (incluindo <code>type</code>, <code>message</code>, <code>description</code>) para facilitar auditoria, alertas e reprocessamento seletivo.</p>"},{"location":"api/limites/","title":"Limites e Restri\u00e7\u00f5es \u2013 API Bling","text":"<p>A API Bling possui regras claras de uso para garantir disponibilidade, desempenho e seguran\u00e7a. Esta se\u00e7\u00e3o contempla os principais limites e cuidados necess\u00e1rios durante a integra\u00e7\u00e3o.</p>"},{"location":"api/limites/#limites-gerais-de-requisicao","title":"\u26a0\ufe0f Limites gerais de requisi\u00e7\u00e3o","text":"<ul> <li>M\u00e1ximo de 3 requisi\u00e7\u00f5es por segundo por conta.</li> <li>Limite di\u00e1rio de 120.000 requisi\u00e7\u00f5es por conta.</li> <li>Caso esses limites sejam atingidos (c\u00f3digo HTTP <code>429</code>), a API retorna respostas indicando se o bloqueio \u00e9 por segundo ou por dia, conforme o contexto :contentReference[oaicite:1]{index=1}.</li> </ul> <p>Exemplo de resposta ao exceder o limite: <pre><code>{\n  \"error\": {\n    \"type\": \"TOO_MANY_REQUESTS\",\n    \"message\": \"Limite de requisi\u00e7\u00f5es atingido.\",\n    \"description\": \"O limite de requisi\u00e7\u00f5es por segundo foi atingido, tente novamente mais tarde.\",\n    \"limit\": 3,\n    \"period\": \"second\"\n  }\n}\n</code></pre></p>"},{"location":"api/limites/#bloqueios-por-ip","title":"\u274c Bloqueios por IP","text":"<p>A API tamb\u00e9m bloqueia IPs em cen\u00e1rios extremos:</p> <ul> <li>300 erros HTTP em 10 segundos \u2192 bloqueio de 10 minutos.</li> <li>600 requisi\u00e7\u00f5es em 10 segundos \u2192 bloqueio de 10 minutos.</li> <li>Mais de 20 requisi\u00e7\u00f5es ao endpoint <code>/oauth/token</code> em 60 segundos \u2192 bloqueio por 60 minutos.</li> </ul> <p>Veja mais em: Limites \u2013 Bling Developer</p>"},{"location":"api/limites/#filtros-de-periodo","title":"\ud83d\udcca Filtros de per\u00edodo","text":"<p>Requisi\u00e7\u00f5es GET com filtros de data cujo intervalo seja superior a 1 ano retornam erro HTTP 400.</p> <p>Par\u00e2metros t\u00edpicos de filtros incluem:</p> <ul> <li><code>dataInicial</code>, <code>dataFinal</code></li> <li><code>dataAlteracaoInicial</code>, <code>dataAlteracaoFinal</code></li> </ul> <p>Veja mais em: Limites \u2013 Bling Developer</p>"},{"location":"api/limites/#estrategias-para-lidar-com-limites","title":"\ud83d\udd04 Estrat\u00e9gias para lidar com limites","text":"<ul> <li>Throttle e backoff exponencial: Implemente esperas autom\u00e1ticas ao receber erros 429.</li> <li>Distribua as requisi\u00e7\u00f5es ao longo do tempo para evitar bursts que excedam os limites por segundo.</li> <li>Monitore erros HTTP 429 e IP blocks no log do seu ETL.</li> <li>Utilize filtros de data de forma adequada, respeitando o limite m\u00e1ximo de um ano por consulta.</li> </ul>"},{"location":"api/limites/#tabela-de-resumo","title":"Tabela de Resumo","text":"Tipo de Limite Valor / Condi\u00e7\u00e3o Requisi\u00e7\u00f5es por segundo At\u00e9 3 requisi\u00e7\u00f5es Requisi\u00e7\u00f5es por dia At\u00e9 120.000 requisi\u00e7\u00f5es Bloqueio por erros 300 erros em 10s \u2192 bloqueio de 10 minutos Bloqueio por volume 600 requisi\u00e7\u00f5es em 10s \u2192 bloqueio de 10 minutos Limite em token OAuth 20 requisi\u00e7\u00f5es em 60s \u2192 bloqueio de 60 minutos Filtros de data Intervalos maiores que 1 ano \u2192 HTTP 400"},{"location":"api/limites/#referencias","title":"Refer\u00eancias","text":"<ul> <li>Limites da API \u2013 Documenta\u00e7\u00e3o Oficial Bling</li> <li>Boas Pr\u00e1ticas de Pagina\u00e7\u00e3o \u2013 Bling Developer</li> </ul> <p>Note</p> <p>\u00c9 recomend\u00e1vel monitorar e registrar erros HTTP 429 e bloqueios por IP para permitir opera\u00e7\u00f5es seguras, reprocessamento seletivo e conformidade com os limites da API.</p>"},{"location":"api/paginacao/","title":"Pagina\u00e7\u00e3o na API Bling","text":"<p>A maioria dos endpoints da API Bling implementa pagina\u00e7\u00e3o para retornar grandes volumes de dados em partes menores (p\u00e1ginas). O correto tratamento da pagina\u00e7\u00e3o \u00e9 fundamental para garantir a extra\u00e7\u00e3o completa, eficiente e sem duplicidade de todos os registros.</p>"},{"location":"api/paginacao/#como-funciona-a-paginacao","title":"Como funciona a pagina\u00e7\u00e3o?","text":"<ul> <li>Os endpoints retornam um conjunto limitado de registros por requisi\u00e7\u00e3o.</li> <li>Par\u00e2metros padr\u00f5es para pagina\u00e7\u00e3o:<ul> <li><code>pagina</code>: n\u00famero da p\u00e1gina a ser consultada (inicia em 1)</li> <li><code>limite</code>: quantidade m\u00e1xima de registros por p\u00e1gina (definido pelo endpoint; normalmente at\u00e9 100)</li> </ul> </li> <li>As respostas normalmente trazem informa\u00e7\u00f5es de p\u00e1gina atual, total de p\u00e1ginas e/ou total de registros.</li> <li>Para extrair todos os dados, \u00e9 necess\u00e1rio iterar sobre todas as p\u00e1ginas dispon\u00edveis at\u00e9 n\u00e3o haver mais registros.</li> </ul>"},{"location":"api/paginacao/#exemplo-pratico","title":"Exemplo pr\u00e1tico","text":"<p>Request: <pre><code>GET /v1/produtos?pagina=1&amp;limite=100 HTTP/1.1\nHost: api.bling.com.br\nAuthorization: Bearer &lt;seu_token_de_acesso&gt;\n</code></pre></p> <p>Response (exemplo simplificado):</p> <pre><code>{\n  \"data\": [ ... ],\n  \"pagina\": 1,\n  \"totalPaginas\": 15,\n  \"totalRegistros\": 1500\n}\n</code></pre>"},{"location":"api/paginacao/#estrategia-de-iteracao","title":"Estrat\u00e9gia de Itera\u00e7\u00e3o","text":"<ul> <li>Comece consultando a p\u00e1gina 1.</li> <li>Continue requisitando as pr\u00f3ximas p\u00e1ginas (pagina=2, pagina=3, ...) at\u00e9 atingir o total de p\u00e1ginas (totalPaginas) informado na resposta.</li> <li>Para cada p\u00e1gina, processe e armazene os registros retornados.</li> </ul> <p>Exemplo de pseudoc\u00f3digo:</p> <pre><code>pagina = 1\nwhile True:\n    response = requisitar_api(pagina=pagina, limite=100)\n    processa_dados(response['data'])\n    if pagina &gt;= response['totalPaginas']:\n        break\n    pagina += 1\n</code></pre>"},{"location":"api/paginacao/#boas-praticas-e-cuidados","title":"Boas Pr\u00e1ticas e Cuidados","text":"<ul> <li>N\u00e3o assuma limites fixos: Sempre confira o limite permitido no endpoint.</li> <li>Evite duplicidades: Se houver inclus\u00e3o de registros enquanto sua extra\u00e7\u00e3o roda, utilize crit\u00e9rios incrementais e idempotentes.</li> <li>Respeite limites de requisi\u00e7\u00e3o: Paginar muitos dados pode rapidamente atingir o rate limit da API. Veja a se\u00e7\u00e3o Limites e Restri\u00e7\u00f5es.</li> <li>Registre falhas: Implemente logs por p\u00e1gina processada para reprocessar facilmente em caso de erro.</li> <li>Confira a documenta\u00e7\u00e3o oficial: Alguns endpoints podem n\u00e3o suportar pagina\u00e7\u00e3o ou ter varia\u00e7\u00f5es nos par\u00e2metros.</li> </ul>"},{"location":"api/paginacao/#referencias","title":"Refer\u00eancias","text":"<ul> <li>Boas Pr\u00e1ticas de Pagina\u00e7\u00e3o - Documenta\u00e7\u00e3o Oficial Bling</li> <li>Lista de Endpoints \u2013 Bling Developer</li> </ul> <p>Note</p> <p>O correto tratamento da pagina\u00e7\u00e3o \u00e9 fundamental para garantir a completude e consist\u00eancia dos dados extra\u00eddos do Bling.</p>"},{"location":"db/","title":"Vis\u00e3o Geral do Banco de Dados","text":"<p>O banco de dados utilizado neste projeto \u00e9 um PostgreSQL, projetado para garantir integridade, performance e escalabilidade na centraliza\u00e7\u00e3o dos dados extra\u00eddos do Bling.</p> <p>A modelagem adota as boas pr\u00e1ticas do modelo dimensional de Ralph Kimball, amplamente reconhecido em projetos de Data Warehouse. Essa abordagem foi escolhida para suportar grandes volumes de informa\u00e7\u00e3o, facilitar consultas anal\u00edticas e garantir flexibilidade para evolu\u00e7\u00e3o do pipeline ETL.</p>"},{"location":"db/#objetivos-da-modelagem","title":"Objetivos da Modelagem","text":"<ul> <li>Centralizar dados provenientes da API Bling em uma estrutura relacional organizada.</li> <li>Otimizar consultas para relat\u00f3rios e integra\u00e7\u00f5es.</li> <li>Permitir controle incremental e hist\u00f3rico das cargas, reduzindo redund\u00e2ncia.</li> <li>Isolar ambientes por schema (por exemplo: produ\u00e7\u00e3o, staging, testes).</li> <li>Facilitar auditoria e rastreabilidade das opera\u00e7\u00f5es de carga.</li> </ul>"},{"location":"db/#principais-componentes","title":"Principais Componentes","text":"<ul> <li> <p>Schemas dedicados:   Separa\u00e7\u00e3o l\u00f3gica entre dados de neg\u00f3cio, controle de carga e schemas auxiliares.</p> </li> <li> <p>Tabelas normalizadas:   Cada entidade (empresa, produto, categoria, dep\u00f3sito, saldo, etc.) possui tabelas espec\u00edficas, minimizando redund\u00e2ncia e garantindo integridade referencial.</p> </li> <li> <p>Procedures e fun\u00e7\u00f5es:   Automatizam opera\u00e7\u00f5es recorrentes, como upserts, consist\u00eancia de dados e tratamentos especiais durante a carga.</p> </li> <li> <p>Controle de Carga:   Tabelas e procedimentos espec\u00edficos para registrar execu\u00e7\u00f5es, falhas e status das cargas, permitindo reprocessamentos inteligentes.</p> </li> </ul>"},{"location":"db/#organizacao-dos-schemas","title":"Organiza\u00e7\u00e3o dos Schemas","text":"Schema Descri\u00e7\u00e3o <code>conf</code> Controle de carga, configura\u00e7\u00f5es do pipeline, par\u00e2metros e logging <code>dim</code> Tabelas dimensionais, entidades de neg\u00f3cio (ex: produtos) <code>etl</code> Controle das procedures que realizam normaliza\u00e7\u00e3o da stg para dim/fato <code>fato</code> Tabelas fato (dados transacionais e quantitativos) <code>link</code> Tabelas de relacionamento entre entidades <code>stg</code> Staging: dados brutos tempor\u00e1rios extra\u00eddos do Bling <p>Observa\u00e7\u00e3o: Os nomes dos schemas podem variar conforme a implanta\u00e7\u00e3o e ambiente.</p>"},{"location":"db/#convencoes","title":"Conven\u00e7\u00f5es","text":"<ul> <li>Chaves prim\u00e1rias e estrangeiras implementadas para integridade relacional.</li> <li>Timestamps para rastreamento de altera\u00e7\u00f5es e hist\u00f3rico de carga.</li> <li>\u00cdndices para acelerar consultas frequentes.</li> <li>Naming convention padronizada para tabelas e campos.</li> </ul>"},{"location":"db/#evolucao-e-expansao","title":"Evolu\u00e7\u00e3o e Expans\u00e3o","text":"<p>O banco de dados est\u00e1 em constante evolu\u00e7\u00e3o para acompanhar novas demandas de neg\u00f3cio, integra\u00e7\u00f5es e melhorias de performance.</p> <p>Note</p> <p>Para visualizar detalhes das tabelas, schemas, procedures e fun\u00e7\u00f5es, utilize o menu lateral ou acesse as se\u00e7\u00f5es espec\u00edficas desta documenta\u00e7\u00e3o.</p>"},{"location":"db/controle_carga/","title":"Controle de Carga","text":"<p>O controle de carga \u00e9 fundamental para garantir confiabilidade, rastreabilidade e governan\u00e7a no processo ETL. No projeto Lojas Stilli, o controle \u00e9 centralizado na tabela <code>conf.controle_carga</code>, que monitora cada execu\u00e7\u00e3o das rotinas de extra\u00e7\u00e3o, transforma\u00e7\u00e3o e carga.</p>"},{"location":"db/controle_carga/#tabela-confcontrole_carga","title":"Tabela <code>conf.controle_carga</code>","text":"<p>Esta tabela registra e parametriza o controle incremental de cada entidade do pipeline, garantindo que nenhuma informa\u00e7\u00e3o seja processada duplicadamente ou deixada para tr\u00e1s.</p> Coluna Tipo Descri\u00e7\u00e3o <code>entidade</code> varchar Nome da entidade/processo controlado <code>tabela_fisica</code> varchar Nome da tabela destino <code>suporte_incremental</code> char Indica se suporta carga incremental (<code>S</code>/<code>N</code>) <code>etapa</code> varchar Fase do processo ETL (ex: extra\u00e7\u00e3o, transforma\u00e7\u00e3o, carga) <code>dt_ultima_carga</code> date Data/hora da \u00faltima execu\u00e7\u00e3o/carga <ul> <li>Finalidade: </li> <li>Permitir cargas incrementais</li> <li>Reprocessamento seletivo</li> <li>Auditoria sobre quando e o que foi carregado</li> </ul>"},{"location":"db/controle_carga/#tabela-confimportacao_falha","title":"Tabela <code>conf.importacao_falha</code>","text":"<p>Registra falhas ocorridas durante a carga, permitindo reprocessamentos, acompanhamento de problemas e an\u00e1lise de recorr\u00eancia de erros.</p> Coluna Tipo Descri\u00e7\u00e3o <code>id</code> integer Identificador da falha <code>entidade</code> varchar Entidade afetada <code>id_referencia</code> varchar Chave do registro com erro <code>erro</code> text Descri\u00e7\u00e3o detalhada da falha <code>dt_falha</code> timestamp Data/hora do erro <code>processado</code> boolean Flag para controle de reprocessamento <ul> <li>Finalidade: </li> <li>Permitir retentativas inteligentes</li> <li>Gerar relat\u00f3rios de qualidade/processos</li> <li>Facilitar troubleshooting</li> </ul>"},{"location":"db/controle_carga/#tabela-conflog","title":"Tabela <code>conf.log</code>","text":"<p>Centraliza o logging de execu\u00e7\u00f5es das rotinas ETL, detalhando in\u00edcio, fim, status e mensagens de erro de cada carga/processo.</p> Coluna Tipo Descri\u00e7\u00e3o <code>id_log</code> bigint Identificador \u00fanico do log <code>tabela</code> varchar Nome da tabela/processo logado <code>acao</code> varchar A\u00e7\u00e3o realizada (ex: extra\u00e7\u00e3o, carga) <code>status</code> varchar Status da execu\u00e7\u00e3o (ex: sucesso, erro) <code>dt_inicio</code> timestamp Data/hora de in\u00edcio <code>dt_fim</code> timestamp Data/hora de t\u00e9rmino <code>mensagem_erro</code> text Mensagem detalhada do erro (se houver) <ul> <li>Finalidade: </li> <li>Auditoria completa do pipeline ETL</li> <li>Facilitador para troubleshooting e SLA</li> <li>Permite identificar gargalos, recorr\u00eancias e falhas de execu\u00e7\u00e3o</li> </ul>"},{"location":"db/controle_carga/#fluxo-resumido-do-controle-de-carga","title":"Fluxo Resumido do Controle de Carga","text":"<ol> <li>Consulta a <code>conf.controle_carga</code> para determinar o ponto de partida da carga incremental de cada entidade.</li> <li>Execu\u00e7\u00e3o da carga ETL (extra\u00e7\u00e3o \u2192 transforma\u00e7\u00e3o \u2192 carga).</li> <li>Registro de logs em <code>conf.log</code> detalhando status, in\u00edcio/fim e eventuais erros.</li> <li>Em caso de erro, grava em <code>conf.importacao_falha</code> para permitir an\u00e1lise e reprocessamento posterior.</li> <li>Atualiza\u00e7\u00e3o de <code>dt_ultima_carga</code> em <code>conf.controle_carga</code> ap\u00f3s sucesso.</li> </ol> <p>Tip</p> <p>O controle de carga robusto permite automatiza\u00e7\u00e3o segura do pipeline, facilita reprocessamento seletivo e fornece total transpar\u00eancia para auditoria e conformidade.</p>"},{"location":"db/roles/","title":"Usu\u00e1rios &amp; Roles \u2013 Controle de Acesso","text":"<p>O controle de acesso ao banco de dados PostgreSQL \u00e9 estruturado para garantir seguran\u00e7a, governan\u00e7a e rastreabilidade. Abaixo est\u00e3o descritos os principais usu\u00e1rios, roles e as permiss\u00f5es concedidas para cada um.</p>"},{"location":"db/roles/#estrutura-de-roles","title":"Estrutura de Roles","text":"Role Descri\u00e7\u00e3o Permiss\u00f5es <code>bi_readonly</code> Role de leitura para BI/relat\u00f3rios SELECT nas tabelas dos schemas dim, fato, link"},{"location":"db/roles/#usuarios","title":"Usu\u00e1rios","text":"Usu\u00e1rio Pertence \u00e0 Role Pode Logar Observa\u00e7\u00e3o <code>powerbi_user</code> bi_readonly \u2705 Usu\u00e1rio dedicado para conex\u00e3o Power BI <code>etl_user</code> etl (exemplo) \u2705 Usu\u00e1rio dedicado para rotinas ETL <code>postgres</code> - \u2705 Superusu\u00e1rio, uso restrito ao DBA"},{"location":"db/roles/#permissoes-concedidas","title":"Permiss\u00f5es Concedidas","text":"<ul> <li>O usu\u00e1rio <code>powerbi_user</code> pode realizar consultas de leitura (<code>SELECT</code>) nas tabelas dos schemas:</li> <li><code>dim</code></li> <li><code>fato</code></li> <li><code>link</code></li> <li>N\u00e3o possui permiss\u00f5es de escrita, altera\u00e7\u00e3o ou exclus\u00e3o.</li> <li>Permiss\u00e3o garantida tamb\u00e9m para futuras tabelas criadas nesses schemas.</li> </ul> <p>Note</p> <p>Para a cria\u00e7\u00e3o de novos usu\u00e1rios, revis\u00e3o ou remo\u00e7\u00e3o de permiss\u00f5es, consulte sempre o DBA respons\u00e1vel e siga as pol\u00edticas de seguran\u00e7a da organiza\u00e7\u00e3o.</p>"},{"location":"db/schemas/","title":"Schemas do Banco de Dados","text":"<p>A modelagem do banco utiliza a separa\u00e7\u00e3o l\u00f3gica de dados em schemas, organizando entidades, fatos, controle, transforma\u00e7\u00f5es e staging conforme o padr\u00e3o Kimball para Data Warehousing.</p>"},{"location":"db/schemas/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A divis\u00e3o por schemas garante organiza\u00e7\u00e3o, performance, isolamento de permiss\u00f5es e facilita a governan\u00e7a e evolu\u00e7\u00e3o do modelo de dados.</p>"},{"location":"db/schemas/#owners-dos-schemas","title":"Owners dos Schemas","text":"<p>Os schemas do banco est\u00e3o associados aos seguintes propriet\u00e1rios (owners):</p> Schema Owner Fun\u00e7\u00e3o/Objetivo <code>conf</code> postgres Controle de carga, par\u00e2metros globais e logs <code>dim</code> postgres Tabelas de dimens\u00e3o, entidades de neg\u00f3cio <code>etl</code> postgres Procedures e l\u00f3gica de transforma\u00e7\u00e3o (ETL) <code>fato</code> postgres Tabelas fato, dados transacionais e quantitativos <code>link</code> postgres Relacionamentos N:N entre entidades <code>stg</code> postgres Staging de dados brutos extra\u00eddos do Bling (landing zone) <code>public</code> pg_database_owner Schema padr\u00e3o do PostgreSQL (uso gen\u00e9rico, evitar uso no projeto) <code>pg_toast</code> postgres Schema interno do PostgreSQL, utilizado para dados grandes <p>Nota: Recomenda-se manter os objetos de neg\u00f3cio e controle fora do schema <code>public</code> para garantir maior seguran\u00e7a e organiza\u00e7\u00e3o.</p>"},{"location":"db/schemas/#convencoes","title":"Conven\u00e7\u00f5es","text":"<ul> <li>Schemas usam nomes min\u00fasculos, curtos e descritivos.</li> <li>Permiss\u00f5es s\u00e3o gerenciadas por schema; schemas sens\u00edveis (como <code>conf</code>) podem ter acesso restrito.</li> <li>Procedures de ETL s\u00e3o centralizadas em <code>etl</code>.</li> <li>Evolu\u00e7\u00e3o incremental: novos schemas podem ser criados conforme novas demandas de neg\u00f3cio.</li> </ul>"},{"location":"db/schemas/#fluxo-entre-schemas","title":"Fluxo entre Schemas","text":"<p>stg (landing zone) \u2192 etl (transforma\u00e7\u00e3o) \u2192 dim/fato/link (modelo) \u2192 conf (controle)</p>"},{"location":"db/schemas/#exemplos-de-uso","title":"Exemplos de Uso","text":"<ul> <li>conf: Registro do controle incremental de cargas, falhas e logs.</li> <li>dim: Cadastro de entidades como produtos, empresas, vendedores.</li> <li>fato: Movimenta\u00e7\u00e3o de estoque, vendas, pedidos, notas fiscais.</li> <li>etl: Procedures de normaliza\u00e7\u00e3o dos dados brutos para o modelo anal\u00edtico.</li> <li>link: Relacionamentos N:N, como produto-fornecedor.</li> <li>stg: \u00c1rea de staging dos dados extra\u00eddos diretamente do Bling.</li> </ul> <p>Note</p> <p>Para gest\u00e3o de owners, permiss\u00f5es e versionamento dos schemas, consulte o DBA respons\u00e1vel e a pol\u00edtica de governan\u00e7a de dados da organiza\u00e7\u00e3o.</p>"},{"location":"db/tabelas/","title":"Tabelas do Banco de Dados","text":"<p>Abaixo est\u00e1 o sum\u00e1rio de todas as tabelas dos schemas de neg\u00f3cio, staging, link e controle, seguindo a modelagem dimensional inspirada em Kimball. Para cada tabela, recomenda-se documentar os principais campos, tipos e observa\u00e7\u00f5es, facilitando auditoria, integra\u00e7\u00e3o e evolu\u00e7\u00e3o.</p>"},{"location":"db/tabelas/#sumario-de-schemas-e-tabelas","title":"Sum\u00e1rio de Schemas e Tabelas","text":""},{"location":"db/tabelas/#conf","title":"conf","text":"<ul> <li>controle_carga: Controle incremental das cargas de dados.</li> <li>importacao_falha: Registro de falhas e exce\u00e7\u00f5es durante importa\u00e7\u00f5es.</li> <li>log: Logging estruturado de execu\u00e7\u00f5es do ETL.</li> </ul>"},{"location":"db/tabelas/#dim","title":"dim","text":"<ul> <li>canais_venda</li> <li>categoria_produto</li> <li>contato</li> <li>deposito</li> <li>empresa</li> <li>forma_pagamento</li> <li>fornecedor</li> <li>grupo_produto</li> <li>logistica</li> <li>logistica_servico</li> <li>notificacao</li> <li>pessoa_contato</li> <li>produto</li> <li>produto_estrutura</li> <li>produto_estrutura_componente</li> <li>produto_fornecedor</li> <li>tipo_contato</li> <li>tributacao_produto</li> <li>vendedor</li> <li>vendedor_comissao</li> </ul>"},{"location":"db/tabelas/#fato","title":"fato","text":"<ul> <li>estoque</li> <li>nota_fiscal</li> <li>nota_fiscal_item</li> <li>nota_fiscal_parcela</li> <li>pedido_compra</li> <li>pedido_compra_item</li> <li>pedido_compra_parcela</li> <li>pedido_venda</li> <li>pedido_venda_item</li> <li>pedido_venda_parcela</li> </ul>"},{"location":"db/tabelas/#link","title":"link","text":"<ul> <li>contato_pessoa_contato</li> <li>contato_tipo_contato</li> </ul>"},{"location":"db/tabelas/#stg","title":"stg","text":"<ul> <li>canais_venda_bling</li> <li>categoria_produto_bling</li> <li>contato_bling</li> <li>deposito_bling</li> <li>empresa_bling</li> <li>forma_pagamento_bling</li> <li>fornecedor_bling</li> <li>grupo_produto_bling</li> <li>logistica_bling</li> <li>logistica_servico_bling</li> <li>natureza_operacao_bling</li> <li>nota_fiscal_bling</li> <li>notificacao_bling</li> <li>pedido_compra_bling</li> <li>pedido_venda_bling</li> <li>produto_bling</li> <li>produto_fornecedor</li> <li>saldo_estoque_bling</li> <li>saldo_produto_deposito_bling</li> <li>vendedor_bling</li> </ul>"},{"location":"db/tabelas/#dimproduto","title":"dim.produto","text":"Campo Tipo Nulo? Default Observa\u00e7\u00e3o produto_sk integer n\u00e3o sequencial Chave prim\u00e1ria surrogate key produto_id bigint sim ID original Bling nome character varying sim Nome do produto preco numeric sim Pre\u00e7o de venda dt_carga timestamp sim now() Data da carga no DW ... ... ... ... ... <p>Descri\u00e7\u00e3o: Tabela dimens\u00e3o de produtos. Utilizada para an\u00e1lises hist\u00f3ricas, cruzamento com fatos de vendas, estoque e relacionamento com demais dimens\u00f5es.</p> <p>Observa\u00e7\u00e3o: As descri\u00e7\u00f5es resumidas ser\u00e3o evolu\u00eddas gradualmente conforme o projeto demanda.</p>"},{"location":"python/","title":"Vis\u00e3o Geral \u2013 Python &amp; ETL","text":"<p>Esta se\u00e7\u00e3o documenta toda a arquitetura, boas pr\u00e1ticas e padr\u00f5es adotados nos scripts Python respons\u00e1veis pelo pipeline ETL (Extract, Transform, Load) que integra os dados do Bling ao banco de dados PostgreSQL das Lojas Stilli.</p>"},{"location":"python/#objetivo","title":"Objetivo","text":"<p>Padronizar, automatizar e garantir a qualidade da extra\u00e7\u00e3o de dados, transforma\u00e7\u00e3o e carga incremental, suportando alta volumetria e opera\u00e7\u00f5es confi\u00e1veis para reporting e integra\u00e7\u00f5es.</p>"},{"location":"python/#principais-caracteristicas","title":"Principais Caracter\u00edsticas","text":"<ul> <li> <p>Arquitetura modular:   Cada responsabilidade \u00e9 separada em m\u00f3dulos, facilitando manuten\u00e7\u00e3o e escalabilidade.</p> </li> <li> <p>Conex\u00e3o segura e robusta:   Gerenciamento centralizado de credenciais e tokens para integra\u00e7\u00e3o com a API Bling e PostgreSQL.</p> </li> <li> <p>Controle incremental:   Apenas dados novos ou alterados s\u00e3o extra\u00eddos e carregados, minimizando redund\u00e2ncia e otimizando performance.</p> </li> <li> <p>Logging centralizado:   Todos os eventos relevantes do pipeline (sucesso, falha, warnings, performance) s\u00e3o registrados para auditoria e troubleshooting.</p> </li> <li> <p>Tratamento de falhas e reprocessamento:   Estrat\u00e9gias para identificar, registrar e reprocessar falhas, garantindo integridade dos dados.</p> </li> <li> <p>Processamento em lote (batch):   Uso de processamento em blocos para acelerar opera\u00e7\u00f5es de carga e minimizar impacto em recursos.</p> </li> </ul>"},{"location":"python/#estrutura-dos-scripts","title":"Estrutura dos Scripts","text":"<p>O pipeline \u00e9 organizado em m\u00f3dulos espec\u00edficos, incluindo:</p> <ul> <li>main.py: Orquestra\u00e7\u00e3o das rotinas ETL.</li> <li>bling_api.py: Conex\u00e3o e requisi\u00e7\u00f5es \u00e0 API Bling.</li> <li>etl.py: Controle e execu\u00e7\u00e3o das cargas incrementais.</li> <li>db.py: Opera\u00e7\u00f5es com PostgreSQL (insert, upsert, etc.).</li> <li>transformers.py: Transforma\u00e7\u00e3o e padroniza\u00e7\u00e3o dos dados.</li> <li>utils.py: Fun\u00e7\u00f5es utilit\u00e1rias e helpers.</li> <li>log.py: Logging centralizado e rastreamento.</li> <li>auth.py: Autentica\u00e7\u00e3o e renova\u00e7\u00e3o de tokens.</li> <li>config.py: Centraliza\u00e7\u00e3o de configura\u00e7\u00f5es e par\u00e2metros.</li> <li>obter_token.py: Script dedicado \u00e0 obten\u00e7\u00e3o de tokens OAuth2.</li> <li>date_utils.py: Fun\u00e7\u00f5es auxiliares para manipula\u00e7\u00e3o de datas.</li> </ul>"},{"location":"python/#boas-praticas-adotadas","title":"Boas Pr\u00e1ticas Adotadas","text":"<ul> <li>Separa\u00e7\u00e3o de responsabilidades entre extra\u00e7\u00e3o, transforma\u00e7\u00e3o e carga.</li> <li>Tratamento de exce\u00e7\u00f5es e logs detalhados para an\u00e1lise de falhas.</li> <li>Configura\u00e7\u00e3o externa via arquivos <code>.env</code> e par\u00e2metros centralizados.</li> <li>Automa\u00e7\u00e3o de execu\u00e7\u00e3o e facilidade para expans\u00e3o do pipeline.</li> </ul> <p>Note</p> <p>Consulte os subitens do menu para detalhes de cada etapa, exemplos de c\u00f3digo e explica\u00e7\u00f5es sobre transforma\u00e7\u00f5es, controle de carga, logging, batch e tratamento de erros.</p>"},{"location":"python/arquitetura/","title":"Arquitetura dos Scripts","text":"<p>Esta se\u00e7\u00e3o apresenta a estrutura modular dos scripts em Python, detalhando o papel de cada arquivo e como eles se integram para formar um pipeline ETL robusto, escal\u00e1vel e de f\u00e1cil manuten\u00e7\u00e3o.</p>"},{"location":"python/arquitetura/#organizacao-dos-modulos","title":"Organiza\u00e7\u00e3o dos M\u00f3dulos","text":"<p>O projeto \u00e9 dividido em m\u00f3dulos independentes, cada um respons\u00e1vel por uma parte do processo, seguindo princ\u00edpios de separa\u00e7\u00e3o de responsabilidades e c\u00f3digo limpo.</p> M\u00f3dulo Fun\u00e7\u00e3o <code>main.py</code> Orquestra\u00e7\u00e3o central do pipeline ETL: inicia e monitora as cargas <code>bling_api.py</code> Integra\u00e7\u00e3o com o Bling: executa requisi\u00e7\u00f5es \u00e0 API e retorna os dados brutos <code>etl.py</code> Gerencia o controle incremental e a execu\u00e7\u00e3o das rotinas de carga <code>db.py</code> Opera com PostgreSQL: conex\u00f5es, inserts, upserts e comandos SQL <code>transformers.py</code> Realiza transforma\u00e7\u00f5es, valida\u00e7\u00f5es e padroniza\u00e7\u00e3o dos dados extra\u00eddos <code>log.py</code> Logging centralizado e estruturado (execu\u00e7\u00e3o, falhas, m\u00e9tricas) <code>auth.py</code> Gerenciamento da autentica\u00e7\u00e3o OAuth2 com a API Bling <code>config.py</code> Centraliza vari\u00e1veis de ambiente e par\u00e2metros globais <code>utils.py</code> Fun\u00e7\u00f5es utilit\u00e1rias diversas (helpers) <code>obter_token.py</code> Script manual para obten\u00e7\u00e3o ou renova\u00e7\u00e3o de tokens OAuth2 <code>date_utils.py</code> Fun\u00e7\u00f5es para manipula\u00e7\u00e3o e padroniza\u00e7\u00e3o de datas"},{"location":"python/arquitetura/#fluxo-geral-do-pipeline","title":"Fluxo Geral do Pipeline","text":"<ol> <li>O <code>main.py</code> inicia a execu\u00e7\u00e3o do processo ETL.</li> <li>O m\u00f3dulo <code>auth.py</code> gerencia a autentica\u00e7\u00e3o e renova\u00e7\u00e3o dos tokens de acesso.</li> <li>O <code>bling_api.py</code> executa as chamadas aos endpoints do Bling, recebendo os dados brutos.</li> <li>O <code>etl.py</code> controla o processamento incremental, definindo quais entidades e per\u00edodos devem ser processados.</li> <li>O <code>transformers.py</code> normaliza e valida os dados extra\u00eddos.</li> <li>O <code>db.py</code> realiza a inser\u00e7\u00e3o ou atualiza\u00e7\u00e3o dos dados no PostgreSQL, utilizando opera\u00e7\u00f5es otimizadas para grandes volumes.</li> <li>O <code>log.py</code> registra logs estruturados sobre cada etapa, incluindo erros, execu\u00e7\u00f5es e m\u00e9tricas de performance.</li> <li>Outros m\u00f3dulos de suporte, como <code>utils.py</code>, <code>config.py</code> e <code>date_utils.py</code>, s\u00e3o utilizados sempre que fun\u00e7\u00f5es utilit\u00e1rias ou par\u00e2metros globais s\u00e3o necess\u00e1rios.</li> </ol>"},{"location":"python/arquitetura/#boas-praticas-adotadas","title":"Boas Pr\u00e1ticas Adotadas","text":"<ul> <li>Separa\u00e7\u00e3o de responsabilidades: cada m\u00f3dulo cuida de uma etapa ou servi\u00e7o espec\u00edfico.</li> <li>Reaproveitamento de c\u00f3digo: fun\u00e7\u00f5es utilit\u00e1rias centralizadas em m\u00f3dulos pr\u00f3prios.</li> <li>Escalabilidade: suporte para novas entidades/endpoints e f\u00e1cil expans\u00e3o do pipeline.</li> <li>Controle e rastreabilidade: logging centralizado e tabelas de controle no banco garantem rastreamento completo das execu\u00e7\u00f5es.</li> </ul> <p>Note</p> <p>Para detalhes do c\u00f3digo de cada m\u00f3dulo, consulte a documenta\u00e7\u00e3o detalhada na se\u00e7\u00e3o correspondente do menu lateral.</p>"},{"location":"python/carga/","title":"Carga","text":"<p>Esta se\u00e7\u00e3o descreve o processo de carga dos dados transformados para o banco de dados PostgreSQL, destacando estrat\u00e9gias de performance, integridade dos dados e rastreabilidade.</p>"},{"location":"python/carga/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A etapa de carga \u00e9 respons\u00e1vel por: - Inserir ou atualizar registros no PostgreSQL de forma eficiente. - Garantir a integridade referencial entre as tabelas. - Registrar logs detalhados sobre cada opera\u00e7\u00e3o executada. - Executar opera\u00e7\u00f5es em lote (batch/bulk insert) para alta performance.</p>"},{"location":"python/carga/#fluxo-da-carga","title":"Fluxo da Carga","text":"<ol> <li> <p>Recep\u00e7\u00e3o dos dados transformados:    O m\u00f3dulo <code>etl.py</code> recebe os dados validados e padronizados para envio ao banco.</p> </li> <li> <p>Prepara\u00e7\u00e3o para inser\u00e7\u00e3o/atualiza\u00e7\u00e3o:    Os dados s\u00e3o organizados em lotes (batch) conforme o volume e a entidade.</p> </li> <li> <p>Execu\u00e7\u00e3o das opera\u00e7\u00f5es no banco:    O m\u00f3dulo <code>db.py</code> executa <code>INSERT</code>, <code>UPDATE</code> ou <code>UPSERT</code> (conforme a regra de cada entidade), utilizando conex\u00f5es otimizadas.</p> </li> <li> <p>Logging:    O m\u00f3dulo <code>log.py</code> registra o sucesso, falha ou qualquer evento relevante para auditoria e troubleshooting.</p> </li> <li> <p>Atualiza\u00e7\u00e3o do controle incremental:    A tabela de controle (<code>controle_carga</code>) \u00e9 atualizada para garantir rastreabilidade e possibilitar reprocessamentos seguros.</p> </li> </ol>"},{"location":"python/carga/#estrategias-de-performance","title":"Estrat\u00e9gias de Performance","text":"<ul> <li>Inserts em massa (bulk insert):   Utiliza\u00e7\u00e3o de opera\u00e7\u00f5es em lote para reduzir o tempo de escrita no banco.</li> <li>Upserts otimizados:   Atualiza\u00e7\u00f5es inteligentes para evitar duplicidade e garantir consist\u00eancia.</li> <li>Controle transacional:   Uso de transa\u00e7\u00f5es para garantir atomicidade e rollback em caso de erro.</li> </ul>"},{"location":"python/carga/#exemplo-de-codigo","title":"Exemplo de C\u00f3digo","text":"<pre><code>from db import inserir_produtos_em_lote\n\nprodutos_tratados = [...]  # lista de dicion\u00e1rios j\u00e1 transformados\ninserir_produtos_em_lote(produtos_tratados)\n</code></pre>"},{"location":"python/carga/#pontos-de-atencao","title":"Pontos de Aten\u00e7\u00e3o","text":"<ul> <li>Chaves \u00fanicas e integridade referencial:   Certifique-se de que todas as chaves prim\u00e1rias e estrangeiras estejam corretamente tratadas.</li> <li>Volume de dados:   Ajuste o tamanho do lote para equilibrar performance e consumo de mem\u00f3ria.</li> <li>Erros de banco:   Todos os erros de inser\u00e7\u00e3o/atualiza\u00e7\u00e3o s\u00e3o logados e tratados para reprocessamento.</li> </ul>"},{"location":"python/carga/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ul> <li>Utilize fun\u00e7\u00f5es espec\u00edficas para cada entidade/tabela.</li> <li>Sempre registre logs detalhados de cada opera\u00e7\u00e3o de carga.</li> <li>Implemente controle incremental robusto para evitar retrabalho e inconsist\u00eancias.</li> </ul> <p>Note</p> <p>Para mais detalhes sobre a estrutura das tabelas, veja a se\u00e7\u00e3o Banco de Dados.</p>"},{"location":"python/extracao/","title":"Extra\u00e7\u00e3o","text":"<p>Nesta se\u00e7\u00e3o, detalhamos o processo de extra\u00e7\u00e3o dos dados do Bling via API, abordando o fluxo principal, configura\u00e7\u00f5es necess\u00e1rias, exemplos de uso e boas pr\u00e1ticas adotadas no projeto.</p>"},{"location":"python/extracao/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A etapa de extra\u00e7\u00e3o \u00e9 respons\u00e1vel por: - Conectar-se \u00e0 API do Bling de forma segura. - Solicitar os dados conforme o endpoint e o per\u00edodo definidos na rotina ETL. - Gerenciar pagina\u00e7\u00e3o, limites e autentica\u00e7\u00e3o OAuth2. - Garantir robustez no tratamento de erros, timeouts e tentativas autom\u00e1ticas (retry).</p>"},{"location":"python/extracao/#fluxo-da-extracao","title":"Fluxo da Extra\u00e7\u00e3o","text":"<ol> <li> <p>Autentica\u00e7\u00e3o:    O m\u00f3dulo <code>auth.py</code> obt\u00e9m e renova o token de acesso necess\u00e1rio para autenticar cada requisi\u00e7\u00e3o \u00e0 API.</p> </li> <li> <p>Chamada \u00e0 API:    O m\u00f3dulo <code>bling_api.py</code> executa as requisi\u00e7\u00f5es, tratando pagina\u00e7\u00e3o, limites de registros e poss\u00edveis erros de comunica\u00e7\u00e3o.</p> </li> <li> <p>Persist\u00eancia bruta:    Os dados retornados s\u00e3o salvos em mem\u00f3ria (ou temporariamente em disco, conforme o volume), antes de serem transformados e enviados ao banco.</p> </li> </ol>"},{"location":"python/extracao/#configuracao-de-parametros","title":"Configura\u00e7\u00e3o de Par\u00e2metros","text":"<ul> <li>Endpoints suportados:   Exemplo: <code>/produtos</code>, <code>/categorias</code>, <code>/vendedores</code>, etc.</li> <li>Per\u00edodo de extra\u00e7\u00e3o:   Controlado via par\u00e2metros de data ou incremental, configurado em <code>etl.py</code> e/ou <code>config.py</code>.</li> <li>Tamanho do lote (batch size):   Definido conforme o endpoint, evitando rate limit e otimizando performance.</li> </ul>"},{"location":"python/extracao/#exemplo-de-codigo","title":"Exemplo de C\u00f3digo","text":"<pre><code>from bling_api import requisitar_endpoint\nfrom auth import get_access_token\n\ntoken = get_access_token()\ndados_produtos = requisitar_endpoint(\"produtos\", token=token, pagina=1, limite=100)\n</code></pre>"},{"location":"python/extracao/#pontos-de-atencao","title":"Pontos de Aten\u00e7\u00e3o","text":"<ul> <li>Pagina\u00e7\u00e3o:   A maioria dos endpoints exige itera\u00e7\u00e3o sobre m\u00faltiplas p\u00e1ginas para obter todos os registros.</li> <li>Rate limit:   Respeite os limites da API. O projeto j\u00e1 implementa tratamento para aguardar e retentar.</li> <li>Tratamento de erros:   Todos os erros (timeout, HTTP 500, 401) s\u00e3o logados e, se poss\u00edvel, retentados automaticamente.</li> </ul>"},{"location":"python/extracao/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ul> <li>Centralize todas as requisi\u00e7\u00f5es \u00e0 API em fun\u00e7\u00f5es/m\u00f3dulos dedicados.</li> <li>Utilize logging detalhado para auditoria e troubleshooting.</li> <li>Planeje extra\u00e7\u00f5es fora do hor\u00e1rio comercial para evitar lentid\u00e3o ou bloqueios.</li> </ul> <p>Note</p> <p>Para detalhes de cada endpoint e exemplos completos, consulte a se\u00e7\u00e3o API Bling.</p>"},{"location":"python/logging/","title":"Logging","text":"<p>Esta se\u00e7\u00e3o explica a abordagem de logging centralizado e estruturado adotada no projeto, fundamental para auditoria, troubleshooting e acompanhamento de performance das cargas ETL.</p>"},{"location":"python/logging/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O logging no projeto \u00e9 respons\u00e1vel por: - Registrar todas as etapas da execu\u00e7\u00e3o do pipeline ETL. - Capturar falhas, exce\u00e7\u00f5es e tentativas de reprocessamento. - Gerar m\u00e9tricas de performance (tempo de execu\u00e7\u00e3o, quantidade de registros processados, etc). - Facilitar a auditoria e rastreabilidade de cada rotina de carga.</p>"},{"location":"python/logging/#como-funciona-o-logging","title":"Como Funciona o Logging","text":"<ol> <li> <p>Estrutura Centralizada:    Todas as mensagens e eventos relevantes s\u00e3o tratados pelo m\u00f3dulo <code>log.py</code>, que padroniza o formato e a sa\u00edda dos logs.</p> </li> <li> <p>N\u00edveis de log:    O sistema suporta diferentes n\u00edveis (<code>INFO</code>, <code>WARNING</code>, <code>ERROR</code>, <code>DEBUG</code>), permitindo controlar o detalhamento conforme o ambiente (produ\u00e7\u00e3o, homologa\u00e7\u00e3o, desenvolvimento).</p> </li> <li> <p>Registro detalhado de eventos:    Cada execu\u00e7\u00e3o, falha, reprocessamento ou alerta relevante \u00e9 registrado com timestamp, nome do processo e contexto da execu\u00e7\u00e3o.</p> </li> <li> <p>Persist\u00eancia dos logs:    Os logs podem ser armazenados em arquivos, banco de dados ou enviados para sistemas externos de monitoramento (opcional).</p> </li> </ol>"},{"location":"python/logging/#exemplo-de-codigo","title":"Exemplo de C\u00f3digo","text":"<pre><code>from log import log_etl\n\nlog_etl(\"INFO\", \"Iniciando carga de produtos\", entidade=\"produtos\")\nlog_etl(\"ERROR\", \"Falha ao inserir registro\", detalhe=\"Chave duplicada\", entidade=\"produtos\")\n</code></pre>"},{"location":"python/logging/#o-que-e-logado","title":"O que \u00e9 Logado","text":"<ul> <li>In\u00edcio e t\u00e9rmino de cada carga.</li> <li>Quantidade de registros processados por lote.</li> <li>Tempo de execu\u00e7\u00e3o de cada etapa.</li> <li>Erros e exce\u00e7\u00f5es capturados.</li> <li>Tentativas de reprocessamento e eventos de retry.</li> </ul>"},{"location":"python/logging/#pontos-de-atencao","title":"Pontos de Aten\u00e7\u00e3o","text":"<ul> <li>Evite prints soltos:   Sempre utilize o m\u00f3dulo de logging centralizado para garantir padroniza\u00e7\u00e3o.</li> <li>Sensibilidade de dados:   N\u00e3o registre informa\u00e7\u00f5es confidenciais em logs acess\u00edveis por m\u00faltiplos usu\u00e1rios.</li> <li>Monitoramento ativo:   Considere integrar o log a sistemas de monitoramento para alertas proativos.</li> </ul>"},{"location":"python/logging/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ul> <li>Adote mensagens claras, objetivas e contextuais.</li> <li>Use n\u00edveis de log de acordo com a criticidade do evento.</li> <li>Padronize os campos m\u00ednimos: timestamp, entidade, mensagem, n\u00edvel e contexto.</li> </ul> <p>Note</p> <p>Para mais detalhes ou exemplos avan\u00e7ados, consulte o c\u00f3digo do m\u00f3dulo <code>log.py</code>.</p>"},{"location":"python/transformacao/","title":"Transforma\u00e7\u00e3o","text":"<p>Esta se\u00e7\u00e3o detalha o processo de transforma\u00e7\u00e3o dos dados extra\u00eddos da API do Bling, explicando as valida\u00e7\u00f5es, padroniza\u00e7\u00f5es e adapta\u00e7\u00f5es realizadas antes do envio para o banco de dados.</p>"},{"location":"python/transformacao/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A etapa de transforma\u00e7\u00e3o garante que os dados extra\u00eddos estejam: - No formato correto para o destino (PostgreSQL). - Validados e limpos de inconsist\u00eancias ou valores inesperados. - Padronizados conforme regras de neg\u00f3cio e requisitos de integra\u00e7\u00e3o. - Enriquecidos quando necess\u00e1rio (c\u00e1lculos, formata\u00e7\u00f5es, agrega\u00e7\u00f5es).</p>"},{"location":"python/transformacao/#fluxo-da-transformacao","title":"Fluxo da Transforma\u00e7\u00e3o","text":"<ol> <li> <p>Recep\u00e7\u00e3o dos dados brutos:    Os dados extra\u00eddos via API s\u00e3o recebidos pelos m\u00e9todos do m\u00f3dulo <code>transformers.py</code>.</p> </li> <li> <p>Valida\u00e7\u00e3o de campos obrigat\u00f3rios:    Checagem de presen\u00e7a e tipos dos dados essenciais.</p> </li> <li> <p>Padroniza\u00e7\u00e3o: </p> </li> <li>Convers\u00e3o de formatos de data/hora.</li> <li>Padroniza\u00e7\u00e3o de nomes de campos, tipos de dados e chaves estrangeiras.</li> <li> <p>Ajustes em campos de texto (remover espa\u00e7os, corrigir capitaliza\u00e7\u00e3o, etc.).</p> </li> <li> <p>Enriquecimento e c\u00e1lculo:    Adi\u00e7\u00e3o de informa\u00e7\u00f5es derivadas, c\u00e1lculos de totais, indicadores ou status conforme a regra de neg\u00f3cio.</p> </li> <li> <p>Prepara\u00e7\u00e3o para o banco:    Transforma\u00e7\u00e3o dos dados para o formato esperado pelas fun\u00e7\u00f5es de inser\u00e7\u00e3o (dicts, DataFrames, listas de tuplas, etc.).</p> </li> </ol>"},{"location":"python/transformacao/#exemplo-de-codigo","title":"Exemplo de C\u00f3digo","text":"<pre><code>from transformers import transformar_produto\n\ndados_brutos = {...}  # obtido via API\ndados_tratados = transformar_produto(dados_brutos)\n</code></pre>"},{"location":"python/transformacao/#principais-transformacoes-realizadas","title":"Principais Transforma\u00e7\u00f5es Realizadas","text":"<ul> <li>Convers\u00e3o de datas (ISO 8601 \u2192 padr\u00e3o SQL).</li> <li>Convers\u00e3o e valida\u00e7\u00e3o de valores num\u00e9ricos.</li> <li>Remo\u00e7\u00e3o de campos nulos ou vazios indesejados.</li> <li>Adapta\u00e7\u00e3o dos nomes dos campos para o padr\u00e3o do banco.</li> <li>Gera\u00e7\u00e3o de campos auxiliares (ex: SKU formatado, c\u00f3digos compostos).</li> </ul>"},{"location":"python/transformacao/#pontos-de-atencao","title":"Pontos de Aten\u00e7\u00e3o","text":"<ul> <li>Erros de convers\u00e3o:   Logs detalhados s\u00e3o gerados em casos de falha na transforma\u00e7\u00e3o, para facilitar troubleshooting.</li> <li>Regra de neg\u00f3cio:   Todas as regras e mapeamentos especiais est\u00e3o centralizados em <code>transformers.py</code> para f\u00e1cil manuten\u00e7\u00e3o.</li> <li>Campos opcionais:   Aten\u00e7\u00e3o ao tratamento de campos ausentes ou opcionais para evitar falhas de inser\u00e7\u00e3o.</li> </ul>"},{"location":"python/transformacao/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ul> <li>Isolar cada transforma\u00e7\u00e3o em fun\u00e7\u00f5es reutiliz\u00e1veis.</li> <li>Documentar claramente cada regra implementada no c\u00f3digo.</li> <li>Garantir testes automatizados para as principais fun\u00e7\u00f5es de transforma\u00e7\u00e3o.</li> </ul> <p>Note</p> <p>Para ver exemplos detalhados e transforma\u00e7\u00f5es espec\u00edficas de cada entidade, consulte o c\u00f3digo-fonte e as se\u00e7\u00f5es de entidades.</p>"},{"location":"python/utils/","title":"Utilit\u00e1rios","text":"<p>Esta se\u00e7\u00e3o apresenta os m\u00f3dulos utilit\u00e1rios do projeto, que re\u00fanem fun\u00e7\u00f5es auxiliares reutiliz\u00e1veis para facilitar o desenvolvimento, manuten\u00e7\u00e3o e padroniza\u00e7\u00e3o das rotinas ETL.</p>"},{"location":"python/utils/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Os utilit\u00e1rios s\u00e3o respons\u00e1veis por: - Centralizar fun\u00e7\u00f5es comuns utilizadas por v\u00e1rios m\u00f3dulos do projeto. - Evitar duplicidade de c\u00f3digo e garantir padroniza\u00e7\u00e3o de opera\u00e7\u00f5es recorrentes. - Facilitar manuten\u00e7\u00e3o e futuras evolu\u00e7\u00f5es do pipeline ETL.</p>"},{"location":"python/utils/#principais-utilitarios","title":"Principais Utilit\u00e1rios","text":"<ul> <li> <p><code>utils.py</code>:   Cont\u00e9m fun\u00e7\u00f5es gen\u00e9ricas como manipula\u00e7\u00e3o de strings, valida\u00e7\u00e3o de dados, opera\u00e7\u00f5es de listas/dicion\u00e1rios, tratamento de exce\u00e7\u00f5es e gera\u00e7\u00e3o de identificadores \u00fanicos.</p> </li> <li> <p><code>date_utils.py</code>:   Especializado em fun\u00e7\u00f5es para manipula\u00e7\u00e3o e padroniza\u00e7\u00e3o de datas, convers\u00e3o de formatos, c\u00e1lculos de intervalos e valida\u00e7\u00e3o de per\u00edodos.</p> </li> <li> <p>Outros scripts utilit\u00e1rios:   Podem incluir ferramentas manuais para obten\u00e7\u00e3o de tokens (<code>obter_token.py</code>), scripts de teste, exemplos e helpers de integra\u00e7\u00e3o.</p> </li> </ul>"},{"location":"python/utils/#exemplo-de-codigo","title":"Exemplo de C\u00f3digo","text":"<pre><code>from utils import remover_acentos, gerar_uuid\nfrom date_utils import converter_para_iso, calcular_diferenca_dias\n\ntexto = \"Jo\u00e3o da Silva\"\ntexto_limpo = remover_acentos(texto)\n\ndata_inicio = \"2023-01-01\"\ndata_fim = \"2023-01-10\"\ndias = calcular_diferenca_dias(data_inicio, data_fim)\n</code></pre>"},{"location":"python/utils/#pontos-de-atencao","title":"Pontos de Aten\u00e7\u00e3o","text":"<ul> <li>Manuten\u00e7\u00e3o centralizada:   Sempre que poss\u00edvel, atualize ou adicione fun\u00e7\u00f5es utilit\u00e1rias nos m\u00f3dulos apropriados, evitando c\u00f3pias em diferentes partes do c\u00f3digo.</li> <li>Testes automatizados:   Garanta que as fun\u00e7\u00f5es utilit\u00e1rias estejam cobertas por testes para evitar efeitos colaterais em diferentes rotinas.</li> <li>Documenta\u00e7\u00e3o:   Mantenha os m\u00f3dulos utilit\u00e1rios bem documentados, com exemplos de uso e descri\u00e7\u00f5es claras dos par\u00e2metros e retornos.</li> </ul>"},{"location":"python/utils/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ul> <li>Prefira fun\u00e7\u00f5es puras e sem efeitos colaterais para utilit\u00e1rios.</li> <li>Reutilize utilit\u00e1rios sempre que poss\u00edvel, reduzindo c\u00f3digo duplicado.</li> <li>Documente cada fun\u00e7\u00e3o utilit\u00e1ria diretamente no c\u00f3digo com docstrings padronizadas.</li> </ul> <p>Note</p> <p>Consulte o c\u00f3digo-fonte de <code>utils.py</code>, <code>date_utils.py</code> e outros scripts para exemplos completos e lista de fun\u00e7\u00f5es dispon\u00edveis.</p>"}]}